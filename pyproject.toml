[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "pre_snap_prediction"
version = "0.0.0"
requires-python = ">=3.10"
dynamic = ["dependencies"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[project.optional-dependencies]
all = [
    "pytest",
    "mypy",
    "ruff",
    "pre-commit",
    "mkdocs-material",
    "mkdocstrings[python]",
    "pandas==2.2.3",
    "pyarrow==17.0.0",
    "shap==0.46.0",
    "shapash==2.7.2",
]
test = ["pytest"]
doc  = ["mkdocs-material", "mkdocstrings[python]"]
mypy = ["mypy"]
ruff = ["ruff"]
explainer = ["pandas==2.2.3", "pyarrow==17.0.0", "shap==0.46.0", "shapash==2.7.2"]

[tool.setuptools]
package-dir = { "" = "src" } #

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed", "*.yaml", "*.yml", "*.conf", "*.ico", "*.json"]

[tool.pytest.ini_options]
pythonpath = ["src"]  #
testpaths = ["tests"]

[tool.mypy]
files = ["src"]
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "A",    # flake8-builtins
    "PLC",  # pylint conventions
    "PLE",  # pylint errors
    "PLW",  # pylint warnings
    "UP",   # pyupgrade"
    "S",    # flake8-bandit,
    "B",    # flake8-bugbear
    "I",    # isort
    "D",    # pydocstyle
    "NPY",  # NumPy-specific rules
]
ignore = ["E501", "D2", "D3", "D4", "D104", "D100", "D106", "S311", "S301"]
per-file-ignores = { "__init__.py" = ["F401"] }
exclude = ["tests/*"]
